Описание задания:
Реализовать контейнер артефактов (Плоская геометрическая фигура, размещаемая в координатной сетке), обладающих тремя альтернативами с
различными полями (Круг (целочисленные координата центра окружности, радиус), Прямоугольник (целочисленные координаты левого верхнего и
правого нижнего углов), Треугольник (целочисленные координаты трех углов)), а также общим для всех альтернатив полем (Цвет фигуры 
(перечислимый тип) = {красный, оранжевый, желтый, зеленый, голубой, синий, фиолетовый}) и функцией(Вычисление площади фигуры (действительное 
число)). После этого упорядочить элементы контейнера по убыванию используя сортировку с помощью прямого включения (Straight Insertion). 
В качестве ключей для сортировки и других действий используются результаты функции, общей для всех альтернатив.

Структура:
В программе используются методы ооп разработки, класс Figure отражает общие для всех артефактов поля и методы, а его дочерние классы Circle, 
Rectangle, Triangle реализуют поля конкретных альтернатив. После этого элементы помещаются в массив, который обрабатывается специальной  
функцией, для сортировки артефактов в необходимом порядке.

Использование:
Для использования необходимо запускать main.py из командной строки указывая при этом дополнительные параметры. Первый дополнительный 
параметр - количество артефактов в контейнере. Варьируется от 0 до 10000. Если количество артефактов меньше либо равно 20, то необходимо 
указать второй параметр, путь к .txt файлу с тестовыми значениями. Для корректной работы рекомендуется указывать полный путь к файлу.
Тестовый файл должен иметь следующую структуру: одна строка с типом артефакта: 1 - круг, 2 - прямоугольник, 3 - треугольник, вторая строка с 
необходимыми конкретной альтернативе: x y r - круг, x1 y1 x2 y2 - прямоугольник, x1 y1 x2 y2 x3 y3 - треугольник. 

Примеры корректного запуска программы:
python main.py 21
python main.py 3 *путь к тестовому файлу*
Следует отметить, что в зависимости от конкретной машины и ос возможно использование команды python3 вместо python. 

Тесты: 
При разработке применялось 5 тестов с 0, 3, 20, 1000 и 10000 артефактами соответственно. 